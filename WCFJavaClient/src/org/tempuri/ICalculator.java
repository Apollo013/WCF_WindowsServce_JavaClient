
package org.tempuri;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ICalculator", targetNamespace = "http://Apollo.ServiceModel.Sample")
@XmlSeeAlso({
    com.microsoft.schemas._2003._10.serialization.ObjectFactory.class
})
public interface ICalculator {


    /**
     * 
     * @param n1
     * @param n2
     * @return
     *     returns java.lang.Double
     */
    @WebMethod(operationName = "Add", action = "http://Apollo.ServiceModel.Sample/ICalculator/Add")
    @WebResult(name = "AddResult", targetNamespace = "http://Apollo.ServiceModel.Sample")
    @RequestWrapper(localName = "Add", targetNamespace = "http://Apollo.ServiceModel.Sample", className = "sample.servicemodel.apollo.Add")
    @ResponseWrapper(localName = "AddResponse", targetNamespace = "http://Apollo.ServiceModel.Sample", className = "sample.servicemodel.apollo.AddResponse")
    public Double add(
        @WebParam(name = "n1", targetNamespace = "http://Apollo.ServiceModel.Sample")
        Double n1,
        @WebParam(name = "n2", targetNamespace = "http://Apollo.ServiceModel.Sample")
        Double n2);

    /**
     * 
     * @param n1
     * @param n2
     * @return
     *     returns java.lang.Double
     */
    @WebMethod(operationName = "Subtract", action = "http://Apollo.ServiceModel.Sample/ICalculator/Subtract")
    @WebResult(name = "SubtractResult", targetNamespace = "http://Apollo.ServiceModel.Sample")
    @RequestWrapper(localName = "Subtract", targetNamespace = "http://Apollo.ServiceModel.Sample", className = "sample.servicemodel.apollo.Subtract")
    @ResponseWrapper(localName = "SubtractResponse", targetNamespace = "http://Apollo.ServiceModel.Sample", className = "sample.servicemodel.apollo.SubtractResponse")
    public Double subtract(
        @WebParam(name = "n1", targetNamespace = "http://Apollo.ServiceModel.Sample")
        Double n1,
        @WebParam(name = "n2", targetNamespace = "http://Apollo.ServiceModel.Sample")
        Double n2);

    /**
     * 
     * @param n1
     * @param n2
     * @return
     *     returns java.lang.Double
     */
    @WebMethod(operationName = "Multiply", action = "http://Apollo.ServiceModel.Sample/ICalculator/Multiply")
    @WebResult(name = "MultiplyResult", targetNamespace = "http://Apollo.ServiceModel.Sample")
    @RequestWrapper(localName = "Multiply", targetNamespace = "http://Apollo.ServiceModel.Sample", className = "sample.servicemodel.apollo.Multiply")
    @ResponseWrapper(localName = "MultiplyResponse", targetNamespace = "http://Apollo.ServiceModel.Sample", className = "sample.servicemodel.apollo.MultiplyResponse")
    public Double multiply(
        @WebParam(name = "n1", targetNamespace = "http://Apollo.ServiceModel.Sample")
        Double n1,
        @WebParam(name = "n2", targetNamespace = "http://Apollo.ServiceModel.Sample")
        Double n2);

    /**
     * 
     * @param n1
     * @param n2
     * @return
     *     returns java.lang.Double
     */
    @WebMethod(operationName = "Divide", action = "http://Apollo.ServiceModel.Sample/ICalculator/Divide")
    @WebResult(name = "DivideResult", targetNamespace = "http://Apollo.ServiceModel.Sample")
    @RequestWrapper(localName = "Divide", targetNamespace = "http://Apollo.ServiceModel.Sample", className = "sample.servicemodel.apollo.Divide")
    @ResponseWrapper(localName = "DivideResponse", targetNamespace = "http://Apollo.ServiceModel.Sample", className = "sample.servicemodel.apollo.DivideResponse")
    public Double divide(
        @WebParam(name = "n1", targetNamespace = "http://Apollo.ServiceModel.Sample")
        Double n1,
        @WebParam(name = "n2", targetNamespace = "http://Apollo.ServiceModel.Sample")
        Double n2);

}
